🐍 Estudos em Python

Repositório destinado a registrar meu aprendizado em Python no curso de Análise e Desenvolvimento de Sistemas na Universidade Estácio de Sá, 
além de estudos complementares realizados por conta própria.

O objetivo é documentar, de forma prática e organizada, cada conteúdo estudado — desde fundamentos básicos até tópicos mais avançados. 
A cada nova matéria, adicionarei exemplos, exercícios e anotações neste README.md.

✅ Conteúdos já estudados
🔹 Fundamentos da linguagem
Estrutura básica de um programa em Python
Uso do print() e input()
Variáveis e tipos de dados (int, float, str, bool)
Conversão de tipos (casting)
📚 Estudei: Sintaxe simples, identação obrigatória, importância de boas práticas de escrita e legibilidade.

🔹 Operadores
Operadores aritméticos (+, -, *, /, //, %, **)
Operadores relacionais (==, !=, >, <, >=, <=)
Operadores lógicos (and, or, not)
📚 Estudei: Precedência entre operadores, combinações lógicas e uso em expressões condicionais.

🔹 Estruturas de decisão
if, else e elif
Estruturas aninhadas e encadeadas
📚 Estudei: Criação de fluxos condicionais, uso prático em validação de dados e categorização.

🔹 Estruturas de repetição
for e while
Uso do range()
Controle de laços com break e continue
📚 Estudei: Diferença entre laço controlado por contador e laço condicionado por lógica. Aplicações em listas, matrizes e iterações sobre strings.

🔹 Estruturas de dados básicas
Listas (list) → indexação, slicing, métodos (append, remove, sort)
Tuplas (tuple) → imutabilidade e usos práticos
Dicionários (dict) → pares chave:valor
Conjuntos (set) → união, interseção, diferença
📚 Estudei: Como escolher a estrutura adequada para cada problema.

🔹 Funções
Definição com def
Parâmetros e retorno de valores
Argumentos posicionais e nomeados
Escopo de variáveis (local e global)
📚 Estudei: Reutilização de código, organização e clareza.

🔹 Módulos e bibliotecas
Uso do import
Principais bibliotecas já exploradas:
math → funções matemáticas
random → geração de números aleatórios
datetime → manipulação de datas e horas
📚 Estudei: Vantagem da modularização e da vasta comunidade Python.

🔹 Manipulação de arquivos
Leitura e escrita com open()
Modos de abertura (r, w, a, rb, wb)
Uso de with para gerenciamento de contexto
📚 Estudei: Diferença entre modo texto e modo binário.

🔹 Comentários e documentação
Uso do # para comentários simples
Strings triplas (""" ... """) para docstrings
📚 Estudei: Importância da clareza nos comentários e documentação do código.

🔹 Projeto prático: Sistema de Estoque em Python
📦 Desenvolvi um sistema de controle de estoque com POO, utilizando as classes Produto e Estoque.
Funcionalidades principais:
Cadastro de produtos com preço e quantidade
Entrada e saída de mercadorias
Registro e controle de vendas
Consulta de estoque em tempo real
Relatório detalhado de vendas
Tecnologias aplicadas:
Programação Orientada a Objetos (classes, atributos, métodos)
Estruturas de repetição e decisão
Manipulação de dicionários para armazenar produtos
Criação de menus interativos para o usuário
Esse projeto consolidou minha prática com objetos, lógica de programação e interação via terminal.

🚀 Próximos passos
Estudar Programação Orientada a Objetos (POO) em Python
Explorar bibliotecas para análise de dados (NumPy, Pandas, Matplotlib)
Criar projetos práticos para consolidar o aprendizado (jogos, automações, scripts úteis)
Evoluir para temas avançados como APIs, web scraping e inteligência artificial

📌 Este repositório é parte do meu aprendizado acadêmico e pessoal em Python. Representa o início da minha trajetória na linguagem, com foco em prática, organização e evolução contínua.